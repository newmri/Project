#pragma once

enum OBJ_ID { BARRACK, CONTROL, SCV, CURSOR, OBJ_END, STAGE };
enum STRUCTURE_STATE_ID {STRUCTURE_BUILD, STRUCTURE_FLY, STRUCTURE_IDLE,
						 STRUCTURE_PRODUCE_UNIT, STRUCTURE_STATE_END};

namespace UNIT {
	enum STATE_ID { ATTACK, IDLE, DIE, WALK, STATE_END};
	
	enum WIRE_ID {LARGE, SMALL};
	namespace LARGE_WIRE {
	enum LARGE_WIRE_ID { BARRACK, CONTROL, SCV, MINE, LARGE_WIRE_END };
	};

	namespace SMALL_WIRE {
		enum SMALL_WIRE_ID { SCV, SMALL_WIRE_END };
	}

};

namespace PORTRAIT {
	enum ID { ADVISOR, SCV, PORTRAIT_END };
};

enum BUTTON_ID { SINGLE_PLAY_BUTTON, MULTI_PLAY_BUTTON, EDITOR_BUTTON, EXIT_BUTTON,
				SINGLE_PLAY_STR_BUTTON, MULTI_PLAY_STR_BUTTON, EDITOR_STR_BUTTON, EXIT_STR_BUTTON, BUTTON_END};
enum CURSOR_ID {ARROW, CLICK, DRAG, HIGHSCROLL, ILLEGAL, LOWSCROLL, MAGG, MAGR, MAGY, TARGG, CURSOR_END };
enum DRAG_POS { DRAG_START_POS, DRAG_END_POS, DRAG_POS_END };
enum DIR_ID {UP, RU, R, RD, DOWN, LD, L, LU};
enum UI_ID { BUTTON, UI_END };
enum UI_STATE_ID { IDLE, MOUSE_OVER, UI_STATE_END };
enum TILE_OBJ_ID {  MINE, TILE_OBJ_END };
enum MAP_KIND_ID { MAIN_MAP, MINI_MAP, MAP_KIND_END };
enum TILE_ID { MOVABLE, UNMOVABLE, TILE_END };

enum IMAGE_ID { MAIN_MENU_IMAGE, BOTTOM_MENU_IMAGE, MAIN_MAP_IMAGE,
				MINI_MAP_FRAME_IMAGE, TILE_IMAGE, RESOURCES_ICON_IMAGE,
				UNIT_SELECT_IMAGE, MINE_IMAGE, IMAGE_END };

enum UNIT_SELECT {UNIT_SELECT1, UNIT_SELECT2, UNIT_SELECT3, UNIT_SELECT4, UNIT_SELECT5, UNIT_SELECT6,
					UNIT_SELECT7, UNIT_SELECT8, UNIT_SELECT9, UNIT_SELECT10, UNIT_SELECT11, UNIT_SELECT12,
					UNIT_SELECT13, UNIT_SELECT14, UNIT_SELECT15, UNIT_SELECT_END};

namespace SCENE {
	enum SCENE_ID {  MAIN_MENU, SCENE_END, SINGLE_PLAY, MULTI_PLAY, EDITOR, EXIT, NO_EVENT};
	
};

enum OWNER_ID {GREEN, RED, NEUTRAL, OWNER_END };
enum PATH_SCORE_ID { H, G, F };
//enum ANIMATION { ANIM_LEFT_IDLE, ANIM_RIGHT_IDLE, ANIM_LEFT, ANIM_RIGHT, ANIM_UP, ANIM_DOWN, ANIM_LEFT_JUMP, ANIM_RIGHT_JUMP, ANIM_END };

enum ANIMATION_NUM { TYPE_NUM, IMAGE_NUM, ANIMATION_NUM_END };

enum {
	DIRECTION_LEFT, DIRECTION_LEFTUP, DIRECTION_UP, DIRECTION_RIGHTUP, DIRECTION_RIGHT,
	DIRECTION_RIGHTDOWN, DIRECTION_DOWN, DIRECTION_LEFTDOWN
};

enum ANGLEDIR {RIGHT = 360, TOP = 90, LEFT = 180, BOTTOM = 269 };